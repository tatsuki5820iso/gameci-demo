name: Run Tests
run-name: ${{ github.actor }} is running CI tests ðŸš€
on:
  workflow_dispatch:

jobs:
  runTests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - Unity
        unityVersion:
          - 2021.3.22f1
        testMode:
          - playmode
          - editmode
        targetPlatform:
          - Android

    steps:
      - name: Checkout (default)
        uses: actions/checkout@v3
        with:
          lfs: false

      # Cache
      - uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-${{ hashFiles(matrix.projectPath) }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-${{ matrix.targetPlatform }}-
            Library-${{ matrix.projectPath }}-
            Library-

      # Run tests
      - uses: game-ci/unity-test-runner@v2
        id: testRunner
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: ${{ matrix.projectPath }}
          testMode: ${{ matrix.testMode }}
          artifactsPath: ${{ matrix.testMode }}-artifacts
          unityVersion: ${{ matrix.unityVersion }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/upload-artifact@v2
        if: always()
        with:
          name: Test results (all modes)
          path: ${{ steps.testRunner.outputs.artifactsPath }}

      # - name: Configure AWS Credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ap-northeast-1

      # - uses: game-ci/unity-builder@cloud-runner-develop
      #   id: aws-fargate-unity-build
      #   with:
      #     providerStrategy: aws
      #     versioning: None
      #     projectPath: `your path here`
      #     unityVersion: `unity version here`
      #     targetPlatform: ${{ matrix.targetPlatform }}
      #     gitPrivateToken: ${{ secrets.GITHUB_TOKEN }}
      #     # You may want to export your builds somewhere external so you can access it:
      #     containerHookFiles: aws-s3-upload-build
